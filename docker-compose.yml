version: "2"

services:
  app:
    build: ./ads-query-eval
    image: polyneme/ads-query-eval
    env_file:
      - ./config.env
    ports:
      - "8000:8000"
    restart: unless-stopped
    command: ["uvicorn", "app.main:app", "--reload", "--host", "0.0.0.0", "--port", "8000"]
    volumes:
      - ./ads-query-eval/app:/code/app

  mongo:
    image: mongo:4.4-bionic
    ports:
      - "57018:27017"
    volumes:
      - ads_query_eval_mongo_data:/data/db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: root

  dagster-postgresql:
    image: postgres:11
    volumes:
      - ads_query_eval_dagster_postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "postgres_user"
      POSTGRES_PASSWORD: "postgres_password"
      POSTGRES_DB: "postgres_db"

  dagster-dagit:
    build: ./dagster
    image: polyneme/dagster-demo
    entrypoint: ["tini", "--", "../lib/repo/entrypoint-dagit.sh"]
    expose:
      - "3000"
    ports:
      - "3000:3000"
    env_file:
      - ./config.env
    restart: on-failure
    environment:
      DAGSTER_POSTGRES_USER: "postgres_user"
      DAGSTER_POSTGRES_PASSWORD: "postgres_password"
      DAGSTER_POSTGRES_DB: "postgres_db"
    depends_on:
      - dagster-postgresql
    volumes:
      - ./dagster:/opt/dagster/lib

  dagster-daemon:
    build: ./dagster
    image: polyneme/dagster-demo
    entrypoint: ["tini", "--", "../lib/repo/entrypoint-daemon.sh"]
    restart: on-failure
    env_file:
      - ./config.env
    environment:
      DAGSTER_POSTGRES_USER: "postgres_user"
      DAGSTER_POSTGRES_PASSWORD: "postgres_password"
      DAGSTER_POSTGRES_DB: "postgres_db"
    depends_on:
      - dagster-postgresql
    volumes:
      - ./dagster:/opt/dagster/lib

volumes:
  ads_query_eval_mongo_data:
    external: true
  ads_query_eval_dagster_postgres_data:
    external: true
