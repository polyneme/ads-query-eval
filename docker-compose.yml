version: "3.7"

services:
  app:
    build: .
    image: polyneme/ads-query-eval
    command: ["uvicorn", "ads_query_eval.app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    env_file:
      - ./config.env
    expose:
      - "8000"
    restart: unless-stopped

  mongo:
    image: mongo:4.4-bionic
    expose:
      - "27017"
    volumes:
      - mongo_data:/data/db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: root

  dagster-postgresql:
    image: postgres:11
    volumes:
      - dagster_postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "postgres_user"
      POSTGRES_PASSWORD: "postgres_password"
      POSTGRES_DB: "postgres_db"

  dagster-dagit:
    build: .
    image: polyneme/ads-query-eval
    working_dir: "/opt/dagster/home/"
    entrypoint: ["tini", "--", "./entrypoint-dagit.sh"]
    expose:
      - "3000"
    env_file:
      - ./config.env
    restart: on-failure
    environment:
      DAGSTER_POSTGRES_USER: "postgres_user"
      DAGSTER_POSTGRES_PASSWORD: "postgres_password"
      DAGSTER_POSTGRES_DB: "postgres_db"
    depends_on:
      - dagster-postgresql

  dagster-daemon:
    build: .
    image: polyneme/ads-query-eval
    working_dir: "/opt/dagster/home/"
    entrypoint: ["tini", "--", "./entrypoint-daemon.sh"]
    restart: on-failure
    env_file:
      - ./config.env
    environment:
      DAGSTER_POSTGRES_USER: "postgres_user"
      DAGSTER_POSTGRES_PASSWORD: "postgres_password"
      DAGSTER_POSTGRES_DB: "postgres_db"
    depends_on:
      - dagster-postgresql

volumes:
  mongo_data:
    name: ${COMPOSE_PROJECT_NAME}_mongo_data
    external: true
  dagster_postgres_data:
    name: ${COMPOSE_PROJECT_NAME}_dagster_postgres_data
    external: true
